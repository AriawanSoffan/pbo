/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gradle;

import java.util.ArrayList;
import java.util.List;

import gradle.GUI.MahasiswaGUI;
import gradle.components.inputs.Input;
import gradle.components.inputs.ListPasswordPage;
import gradle.components.inputs.SelectInput;
import gradle.components.outputs.HLine;
import gradle.components.outputs.Label;
import gradle.components.outputs.Space;
import gradle.database.mahasiswa_db.DBSetup;
import gradle.database.modul9.DBSetupM9;
import gradle.entities.Folder;
import gradle.entities.PasswordStores;
import gradle.entities.UserData;
import gradle.models.DataPassword;
import gradle.models.FolderDaoSQLite;
import gradle.models.Mahasiswa;
import gradle.models.MahasiswaDAOSQLite;
import gradle.models.PasswordStore;
import gradle.models.PasswordStoreDaoSQLite;
import gradle.models.UserDaoSQLite;
import gradle.pages.InputPage;
import gradle.pages.MainPage;

import java.awt.EventQueue;
import java.util.ArrayList;

// import java.security.NoSuchAlgorithmException;

// import gradle.components.outputs.HLine;
// import gradle.components.outputs.Label;
// import gradle.components.outputs.Space;
// import gradle.pages.InputPage;
// import gradle.components.inputs.Input;
// import gradle.components.inputs.SelectInput;
// import models.PasswordStore;

public class App {
        public String getGreeting() {
                return "Hello World!";
        }

        public static void main(String[] args) {
                try {
                        DBSetupM9.createTable();

                        UserDaoSQLite userDao = new UserDaoSQLite();
                        FolderDaoSQLite folderDao = new FolderDaoSQLite();
                        PasswordStoreDaoSQLite passwordStoreDao = new PasswordStoreDaoSQLite();

                        // Add 2 users
                        int user1Id = userDao.register("user1", "password1", "User One");
                        int user2Id = userDao.register("user2", "password2", "User Two");

                        // Add 4 folders
                        folderDao.createFolder("Folder 1");
                        folderDao.createFolder("Folder 2");
                        folderDao.createFolder("Folder 3");
                        folderDao.createFolder("Folder 4");

                        ArrayList<Folder> folders = folderDao.listAllFolders();

                        // Get user data for user1
                        UserData user1 = userDao.login("user1", "password1");

                        // Add 5 passwords for user1
                        passwordStoreDao.addPassword(new PasswordStores("Account 1", "username1", "password1",
                                        PasswordStores.CAT_WEBAPP, folders.get(0)), user1);
                        passwordStoreDao.addPassword(new PasswordStores("Account 2", "username2", "password2",
                                        PasswordStores.CAT_MOBILEAPP, folders.get(1)), user1);
                        passwordStoreDao.addPassword(new PasswordStores("Account 3", "username3", "password3",
                                        PasswordStores.CAT_OTHER, folders.get(2)), user1);
                        passwordStoreDao.addPassword(new PasswordStores("Account 4", "username4", "password4",
                                        PasswordStores.UNCATEGORIZED, folders.get(3)), user1);
                        passwordStoreDao.addPassword(new PasswordStores("Account 5", "username5", "password5",
                                        PasswordStores.CAT_WEBAPP, null), user1);
                        ArrayList<PasswordStores> userPasswords = passwordStoreDao.listPassword(user1);
                        System.out.println("Password data for " + user1.fullname + ":");
                        for (PasswordStores password : userPasswords) {
                                System.out.println("Account Name: " + password.name);
                                System.out.println("Username: " + password.username);
                                System.out.println("Category: " + password.getCategory());
                                System.out.println("Folder: "
                                                + (password.folder != null ? password.folder.name : "No folder"));
                                System.out.println();
                        }
                        // ArrayList<Folder> folders = folderDao.listAllFolders();
                        // DBSetup.createTable();
                        // MahasiswaDAO mahasiswaDAO = new MahasiswaDAOSQLite();
                        // // Insert Data
                        // mahasiswaDAO.insert(new Mahasiswa("A123456", "Budi", 140, 3.5));
                        // mahasiswaDAO.insert(new Mahasiswa("A234567", "Leni", 120, 3.7));
                        // mahasiswaDAO.insert(new Mahasiswa("B123456", "Hasan", 135, 3.2));
                        // mahasiswaDAO.insert(new Mahasiswa("B234567", "Ferdinan", 112, 3.8));
                        // mahasiswaDAO.insert(new Mahasiswa("C123456", "Roni", 110, 3.1));
                        // // Select Data
                        // Mahasiswa selectedMhs = mahasiswaDAO.selectByNim("B234567");
                        // System.out.println(selectedMhs);
                        // // Update Data
                        // selectedMhs.setNama("Frida");
                        // mahasiswaDAO.update(selectedMhs);
                        // List<Mahasiswa> dataMhs = mahasiswaDAO.selectAll();
                        // dataMhs.forEach(mahasiswa -> System.out.println(mahasiswa));
                        // System.out.println("=====================================");
                        // // Delete Data
                        // mahasiswaDAO.delete("A123456");
                        // dataMhs = mahasiswaDAO.selectAll();
                        // dataMhs.forEach(mahasiswa -> System.out.println(mahasiswa));
                        // DataPassword.loadCSVData();
                        // MainPage mainPage = new MainPage(80);
                        // mainPage.draw();
                        // DataPassword.saveCSVData();

                        // Menampilkan Data Mahasiswa3

                        // MahasiswaApp app = new MahasiswaApp();
                        // System.out.println("\nSorted by NIM:");
                        // List<Mahasiswa> sortedByNim = app.sort(3);
                        // sortedByNim.forEach(System.out::println);

                        // // GUI data Mahasiswa
                        // ArrayList<Mahasiswa> dataMhs = Loader.csvMhsLoad();
                        // MahasiswaGUI gui = new MahasiswaGUI(dataMhs);
                        // EventQueue.invokeLater(() -> gui.setVisible(true));

                        // Your application logic here (e.g., password input, display)
                        // Use DataPassword.passData to manage password data

                        // Save password data on exit (before exiting the application)

                        // new InputPage("Inputan Pas", 50).draw();
                        // // new InputPage("Inssp", 50).draw();
                        // new ListPasswordPage("gE", 50).drawContent();
                        // new HLine(50).draw();
                        // new Space(50).draw();
                        // new Label(50, "Uji Coba komponen yang dibuat").draw();
                        // new Space(50).draw();

                        // new HLine(50).draw();
                        // new Space(50).draw();
                        // Input input = new Input("Masukkan nama");
                        // Input input2 = new Input("Usia anda");
                        // input.readInput();
                        // String nama = input.getValue();
                        // input2.readInput();
                        // int usia = input2.getValueInt();

                        // new Space(50).draw();

                        // String[] choices = { "Pilihan 1", "Pilihan 2", "Pilihan 3", "Pilihan 4" };
                        // SelectInput selectInput = new SelectInput("Inputkan pilihan anda:", 70,
                        // choices);
                        // selectInput.draw();
                        // int value = selectInput.getValue();
                        // new Space(50).draw();
                        // new HLine(50).draw();
                        // new Space(50).draw();
                        // new Label(50, "Nama anda: " + nama).draw();
                        // new Label(50, "Usia anda: " + usia).draw();
                        // new Label(50, "Anda memilih menu: " + value).draw();

                } catch (Exception e) {
                        e.printStackTrace();
                }

        }
}
